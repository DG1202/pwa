import {Component, OnInit, HostListener} from '@angular/core';
import {AppService} from "../../../services/app.service";

@Component({
  selector: 'app-header',
  templateUrl: './header.component.html',
  styleUrls: ['./header.component.css']
})
export class HeaderComponent implements OnInit {
  headerColor!: string;
  zone!: string;
  file = ''

  @HostListener('window:beforeinstallprompt', ['$event'])
  onbeforeinstallprompt(e: any) {
    console.log(e);
    // Prevent Chrome 67 and earlier from automatically showing the prompt
    e.preventDefault();
    // Stash the event so it can be triggered later.

  }

  constructor(private appService: AppService) { }

  ngOnInit(): void {
    this.appService.polygon.subscribe(polygon => {
      this.headerColor = polygon.color;
      this.zone = polygon.name;
    })
    this.updateManifest();

    if (window.matchMedia('(display-mode: standalone)').matches) {
      console.log('display-mode is standalone');
    }

    window.addEventListener('appinstalled', (evt) => {
      console.log('a2hs installed');
    });

    this.baforeInstallPromt()
  }

  async getInstalledApps() {
    const installedApps = await (navigator as any).getInstalledRelatedApps();
    console.log(installedApps);

  }

  updateManifest() {
    const currentLocation = window.location.origin;
    var myDynamicManifest = {
      "name": "Your Great Site",
      "short_name": "Your Great Site short name",
      "description": "Something dynamic",
      "start_url": `${currentLocation}/`,
      "background_color": "#000000",
      "theme_color": "#0f4a73",
      "display": "standalone",
      "icons": [
        {
          "src": this.getDataUrlForBase64(this.file, "image/png"),
          "sizes": "144x144",
          "type": "image/png"
        }
        ]
      }
      const link = document.createElement("link");
      link.rel = "manifest";
      const stringManifest = JSON.stringify(myDynamicManifest);
      link.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(stringManifest))
      document.head.appendChild(link);
    }

    getDataUrlForBase64(base64String: string, mimetype: string) {
      return `data:${mimetype};base64,${base64String}`;
    }

    baforeInstallPromt() {
      this.getInstalledApps();

      window.addEventListener('beforeinstallprompt', (e) => {
        console.log('event', e)
        // Prevent Chrome 67 and earlier from automatically showing the prompt
        e.preventDefault();
        // Stash the event so it can be triggered later.
        const deferredPrompt = e;


        });
    }

}
